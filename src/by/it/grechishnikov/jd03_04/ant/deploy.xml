<!-- Ant довольно простая, но несколько разросшаяся система сборки
поэтому для полного понимания кода потребуется документация
Смотрите тут https://ant.apache.org/manual/
-->

<project name="AntDeployToTomcat" default="10deploy" basedir="..">
    <!-- подключаем файл с настройками -->
    <property file="ant/deploy.properties"/>

    <!-- описываем classpath для копилятора -->
    <!-- каждый jar нужно описать отдельно (!),
         компилятор считает, что это как бы отдельный каталог -->
    <path id="classpath">
        <fileset dir="${local.lib.dir}" includes="mysql-connector-java.jar" />
        <fileset dir="${global.lib.dir}" includes="servlet-api.jar"/>
    </path>

    <!-- начинаем выполнять шаги (т.е. цели). -->

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - -  - - -  -->
    <!-- очистка рабочего каталога, тут будут собираться все файлы -->
    <target name="01clean">
        <echo>Cleaning the ${build.dir}</echo>
        <delete dir="${build.dir}"/>
    </target>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - -  - - -  -->
    <!-- пересоздание рабочего каталога для классов и библиотек -->
    <target name="02init" depends="01clean">
        <echo>Creating the build directory</echo>
        <mkdir dir="${build.dir}/WEB-INF/classes"/>
        <mkdir dir="${build.dir}/WEB-INF/lib"/>
    </target>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - -  - - -  -->
    <!-- компиляция файлов проекта -->
    <target name="03compile" depends="02init">
        <echo>Compile the source files</echo>
        <javac srcdir="${src.dir}" destdir="${build.dir}/WEB-INF/classes">
            <classpath  refid="classpath" />
        </javac>
    </target>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - -  - - -  -->
    <!-- копирование в рабочую директорию -->
    <target name="04copy" depends="03compile">
        <!-- копирование кофигурации -->
        <copy todir="${build.dir}/WEB-INF">
            <fileset dir="${conf.dir}"/>
        </copy>
        <!-- копирование jsp css и т.д.-->
        <copy todir="${build.dir}">
            <fileset dir="${web.content}"/>
        </copy>
        <!-- копирование jar, нужных для запуска на сервере -->
        <copy todir="${build.dir}/WEB-INF/lib">
            <fileset dir="${local.lib.dir}"/>
        </copy>
    </target>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - -  - - -  -->
    <!-- формирование итоговой war-сборки (архивация)
        подробнее тут https://ru.wikipedia.org/wiki/WAR_(%D1%82%D0%B8%D0%BF_%D1%84%D0%B0%D0%B9%D0%BB%D0%B0)
    -->
    <target name="05war" depends="04copy">
        <echo>Building the war file</echo>
        <war destfile="${dist.dir}/${web.root}.war" webxml="${build.dir}/WEB-INF/web.xml">
            <fileset dir="${build.dir}"/>
        </war>
    </target>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - -  - - -  -->
    <!-- повторная очистка рабочего каталога, все уже в архиве и более не нужно -->
    <target name="06finalize" depends="05war">
        <echo>Cleaning the ${build.dir}</echo>
        <delete dir="${build.dir}"/>
    </target>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - -  - - -  -->
    <!-- ставим новое приложение. Аналог кнопки deploy в
    http://localhost:28080/manager/html/list -->
    <target name="DeployToTomcat" depends="06finalize">
        <copy todir="${tomcat.home.dir}/webapps">
            <fileset file="${dist.dir}/${web.root}.war"/>
        </copy>
    </target>


</project>